[tool.commitizen]
version = "0.1.0"
version_files = [
    "raffle_ds_research/__init__.py:__version__",
    "pyproject.toml:version",
    "VERSION"
]
tag_format = "v$version"
bump_message = "[ci skip] bump: $current_version → $new_version"



[tool.poetry]
name = "raffle-ds-research"
version = "0.1.0"
description = "User-friendly and scalable experimentation framework for modern NLP"
authors = ["Valentin Liévin <vl@raffle.ai>"]
readme = "README.md"
packages = [
    { include = "raffle_ds_research" },
]

[tool.poetry.scripts]
train = 'raffle_ds_research.cli.train:run'

[tool.poetry.dependencies]
python = "^3.9"
hydra-core = "^1.3.1"
loguru = "^0.6.0"
datasets = "^2.10.0"
torch = { version = "^2.0", allow-prereleases = true }
lightning = "^2.0.0"
wandb = "^0.14.0"
transformers = "^4.26.1"
pydantic = "^1.8"
jinja2 = ">=2.0"
stackprinter = "^0.2.10"
randomname = "^0.2.1"
sentencepiece = "^0.1.97"
tensorstore = "^0.1.32"
hydra-colorlog = "^1.2.0"
rich = "^13.3.1"
raffle-ds-storage = { git = "https://github.com/raffle-ai/ds-storage.git", branch = "main" }
optimum = "^1.7.1"
faiss-cpu = "^1.7"
fastapi = ">=0.80"
uvicorn = ">=0.20.0"
psutil = "^5.9.4"
python-dotenv = "^1.0.0"
cython = "^0.29.33"
## below are required to fix some dependency issues
## -------------------->
#greenlet = "=2.0.1"
#llvmlite = "^0.39.1"
#protobuf = "=3.20"
#markupsafe = "=2.0.1"
#scikit-learn = "^1"
## <--------------------
orjson = "^3.8.7"
polars = "^0.16.14"
deepspeed = "^0.8.3"
elasticsearch = "^8.6.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
pylint = "^2.16.2"
black = "^23.1.0"
isort = "^5.12.0"
pre-commit = "^3.0.4"
commitizen = "^2.42.0"
seaborn = "^0.12.2"
inflect = "^6.0.2"


[tool.poetry.group.cuda]
optional = true

[tool.poetry.group.cuda.dependencies]
faiss-gpu = "^1.7"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core",
    "Cython",
    "numpy",
]


[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[tool.mypy]
python_version = "3.11"
disable_error_code = [
    "assignment",
    "index",
    "arg-type",
    "call-arg",
    "call-overload",
    "union-attr",
    "attr-defined",
    "valid-type",
    "dict-item",
]
ignore_missing_imports = true
follow_imports = "skip"
disallow_untyped_defs = true

[tool.isort]
line_length = 120
include_trailing_comma = true
profile = "black"

[tool.black]
line-length = 120
exclude = '''
(
  /(
      \.git
    | \.pyx
    | \.venv
    | _build
    | build
    | dist
  )/
)
'''

[tool.pyright]
reportOptionalMemberAccess = false

[tool.z.main]
ignore = ["tests"]
py-version = "3.11"

[tool.pylint.basic]
bad-names = ["foo", "bar", "baz", "toto", "tutu", "tata", "l"]

good-names = [
    "i", "j", "k", # iterators
    "f", # file in context managers
    "ex", "e", # exceptions
    "run", "Run", # factory code
    "_", # unused variables
    "ds", "df", # dataset, dataframe
    "x", "y", "z", # polynomials, unknowns
    "cv", # cross validation
    "r", "s", # relevance, score
    "m", "d", # faiss parameters
    "p", "q", "a", # prediction, question, answer
]

[tool.pylint.design]
max-args = 8

[tool.pylint.format]
max-line-length = 120

[tool.pylint."messages control"]
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "missing-module-docstring",
    "too-few-public-methods",
    "use-dict-literal",
]

extension-pkg-whitelist = "pydantic"